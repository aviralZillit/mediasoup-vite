apiVersion: v1
kind: Namespace
metadata:
  name: mediasoup
  labels:
    name: mediasoup
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mediasoup-config
  namespace: mediasoup
data:
  NODE_ENV: "production"
  LISTEN_IP: "0.0.0.0"
  LISTEN_PORT: "3000"
  # Add other environment variables as needed
---
apiVersion: v1
kind: Secret
metadata:
  name: mediasoup-secrets
  namespace: mediasoup
type: Opaque
data:
  # Base64 encoded secrets
  # Example: DATABASE_PASSWORD: <base64-encoded-password>
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mediasoup-server
  namespace: mediasoup
  labels:
    app: mediasoup-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mediasoup-server
  template:
    metadata:
      labels:
        app: mediasoup-server
    spec:
      containers:
      - name: mediasoup-server
        image: your-account.dkr.ecr.region.amazonaws.com/mediasoup-server:latest
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 40000
          name: webrtc-start
          protocol: UDP
        - containerPort: 49999
          name: webrtc-end
          protocol: UDP
        envFrom:
        - configMapRef:
            name: mediasoup-config
        - secretRef:
            name: mediasoup-secrets
        env:
        - name: ANNOUNCED_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: var-run
          mountPath: /var/run
      volumes:
      - name: tmp
        emptyDir: {}
      - name: var-run
        emptyDir: {}
      securityContext:
        fsGroup: 1000
---
apiVersion: v1
kind: Service
metadata:
  name: mediasoup-server-service
  namespace: mediasoup
  labels:
    app: mediasoup-server
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 3000
    protocol: TCP
    name: http
  - port: 40000
    targetPort: 40000
    protocol: UDP
    name: webrtc-start
  - port: 49999
    targetPort: 49999
    protocol: UDP
    name: webrtc-end
  selector:
    app: mediasoup-server
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "tcp"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mediasoup-server-hpa
  namespace: mediasoup
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mediasoup-server
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 50
        periodSeconds: 30
      - type: Pods
        value: 2
        periodSeconds: 60
      selectPolicy: Max
